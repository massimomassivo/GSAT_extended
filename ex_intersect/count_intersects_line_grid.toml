# Beispielkonfiguration für einen einzelnen Lauf der Line-Grid-Auswertung.
# Dupliziere diese Datei und passe die Werte auf dein Projekt an.

[paths]
input_image = "C:/Users/maxbe/PycharmProjects/GSAT_native/images/binarised_images/m-34524 - 2503i12549_segmented.jpg" # Binäres Segmentierungsbild, das ausgewertet werden soll.
results_dir = "C:/Users/maxbe/PycharmProjects/GSAT_native/images/results" # Basisordner, in dem alle Ergebnisdateien abgelegt werden.
# summary_excel = "path/to/project_summary.xlsx" # Optionales gemeinsames Excel-Logbuch für mehrere Läufe.

[pipeline]
row_step = 20 # Pixelabstand zwischen den untersuchten Linien des Gitters.
theta_start = 0.0 # Startwinkel (in Grad) für die Rotation des virtuellen Linealrasters.
theta_end = 180.0 # Endwinkel (in Grad); wird bei Bedarf per inclusive_theta_end ausgewertet.
n_theta_steps = 6 # Anzahl der gleichmäßig verteilten Rotationswinkel.
inclusive_theta_end = false # Endwinkel exakt einbeziehen (True) oder ausschließen (False).
reskeletonize = true # Vor der Messung eine zusätzliche Skelettierung durchführen.
scalebar_pixel = 464.0 # Länge der Skalierungsleiste im Bild (in Pixeln).
scalebar_micrometer = 50.0 # Reale Länge der Skalierungsleiste (in Mikrometern).
crop_rows = [0, 1825] # Zeilenbereich [Start, Ende] des relevanten Bildausschnitts.
crop_cols = [0, 2580] # Spaltenbereich [Start, Ende] des relevanten Bildausschnitts.
borders_white = true # True, wenn Korngrenzen im Bild weiß dargestellt werden.

[save_options]
save_rotated_images = false # Rotierte Zwischenbilder für jeden Winkel abspeichern.
save_boxplot = true # Boxplot-Grafik der Schnittlängen erzeugen.
save_histograms = true # Histogramm der Schnittlängen speichern.
save_excel = true # Detaillierte Excel-Auswertung je Bild schreiben.
append_summary = true # Ergebnisse an die Summary-Arbeitsmappe anhängen.
show_plots = false # Matplotlib-Fenster nach der Auswertung anzeigen.
